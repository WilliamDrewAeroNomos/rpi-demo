# rpi namespace
apiVersion: v1
kind: Namespace
metadata:
  name: rpi
---
# rpi-demo-ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rpi-demo-ingress
  namespace: rpi
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: k8s-master-node
      http:
        paths:
          - path: /actuator
            pathType: Prefix
            backend:
              service:
                name: rpi-demo-app
                port: 
                  number: 9090  
--- 
# rpi-demo-app
apiVersion: v1
kind: Service
metadata:
  name: rpi-demo-app
  namespace: rpi
spec:
  ports:
    - name: http
      port: 9090
      targetPort: 8080
      protocol: TCP
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  selector:
    app: rpi-demo-app
  type: NodePort 

--- 
# rpi-demo-app service deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpi-demo-app
  namespace: rpi
spec:
  replicas: 4
  selector:
    matchLabels:
      app: rpi-demo-app
  template:
    metadata:
      labels:
        app: rpi-demo-app
    spec:
      containers:
        - name: rpi-demo-app
          resources : 
            requests : 
               cpu : 200m 
               memory : 200Mi
            limits:
               cpu : 200m 
               memory : 200Mi            
          image: williamdrew/rpi-demo:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9779
              name: prometheus
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
          # Can NOT get this to work with the actuator
          #startupProbe:
          #    httpGet:
          #       httpHeaders:
          #        - name: status
          #          value: Up
          #       path: /actuator/health/readiness
          #       port: 8080
          #    failureThreshold: 30
          #    periodSeconds: 10          
          #livenessProbe:
          # Spring Boot's actuator as a liveness probe check
          #   httpGet:
          #     path: /actuator/health/liveness
          #     port: 8080
          #     # How long to wait until the liveness check should kick it.
          #   initialDelaySeconds: 10
          #   # Seems excessive but pulling the image on the PI takes some time 
          #   failureThreshold: 30
          #   periodSeconds: 15
      priorityClassName: high-priority
       
