# rpi namespace
apiVersion: v1
kind: Namespace
metadata:
  name: rpi
---
# horizontal pod scaler
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: rpi-demo
  namespace: rpi
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rpi-demo-app
  maxReplicas: 20
  minReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 50
        type: Utilization
    type: Resource
---
# rpi-demo-ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rpi-demo-ingress
  namespace: rpi
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: k8s-master-node
      http:
        paths:
          - path: /actuator
            pathType: Prefix
            backend:
              service:
                name: rpi-demo-app
                port: 
                  number: 9090  
          - path: /lifecycle
            pathType: Prefix
            backend:
              service:
                name: rpi-demo-app
                port: 
                  number: 9090  
--- 
# Pod disruption budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: rpi
  name: rpi-demo-pdb
spec:
  selector:
    matchLabels:
      # Used for counting active Pods for which this PDB is used
      app: rpi-demo-app
  # At least 2 need to be available at any time
  minAvailable: 2
---
# rpi-demo-app
apiVersion: v1
kind: Service
metadata:
  name: rpi-demo-app
  namespace: rpi
spec:
  ports:
    - name: http
      port: 9090
      targetPort: 8080
      protocol: TCP
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
  selector:
    app: rpi-demo-app
  type: NodePort 

--- 
# rpi-demo-app service deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpi-demo-app
  namespace: rpi
spec:
  replicas: 5
  selector:
    matchLabels:
      app: rpi-demo-app
  template:
    metadata:
      labels:
        app: rpi-demo-app
    spec:
      initContainers:
      - name: download
        image: williamdrew/rpi-demo:latest
        imagePullPolicy: Always
        resources : 
          requests : 
            cpu : 200m 
            memory : 200Mi
          limits:
            cpu : 200m 
            memory : 200Mi  
        # Clone an HTML page to be served
        command:
        - git
        - clone
        - https://github.com/mdn/beginner-html-site-scripted
        - /var/lib/data
        # Shared volume with main container
        volumeMounts:
        - mountPath: /var/lib/data
          name: source    
      containers:
      - name: rpi-demo-app
        image: williamdrew/rpi-demo:latest
        imagePullPolicy: Always
        resources : 
          requests : 
            cpu : 200m 
            memory : 200Mi
          limits:
            cpu : 200m 
            memory : 200Mi            
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        volumeMounts:
        - mountPath: /var/www/html
          name: source
        lifecycle:
        # Log to a file indicating the application can start - just a prototype
           postStart:
             exec:
               command:
                - sh
                - -c
                - echo "Wake up!" > /opt/postStart-done
           preStop:
             httpGet:
                port: 8080
                path: /lifecycle/shutdown
      volumes:
        - emptyDir: {}
          name: source
      priorityClassName: high-priority
      
       
